<?php

namespace Phortress\Dephenses\Engine;


use Phortress\Dephenses\Taint\NodeFinder;
use PhpParser\Node\Expr\FuncCall;
use PhpParser\NodeTraverser;

abstract class VulnerabilityChecker {

	protected $messages = array();

	/**
	 * @param Conditions which indicate that a node is vulnerable.
	 * @return Node[] An array of potentially vulnerable function calls
	 */
//	protected function getNodesToCheck($sinkCondition){
//		$traverser = new NodeTraverser();
//		$finder = new NodeFinder($sinkCondition);
//		$traverser->addVisitor($finder);
//		$traverser->traverse($this->parseTree);
//		return $finder->getNodes();
//	}


//	abstract public function findVulnerabilities();

	abstract protected function checkVulnerability(FuncCall $funcCall, $argTaints);

	public function getMessages(){
		return $this->messages;
	}
} 